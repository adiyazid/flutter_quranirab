import 'package:flutter/material.dart';
import 'package:flutter/services.dart';
import 'package:nb_utils/nb_utils.dart';
import 'package:pattern_formatter/pattern_formatter.dart';
import 'package:provider/provider.dart';
import 'package:quranirab/views/payment/payment_validation_provider.dart';

import '../../../theme/theme_provider.dart';

/* Text 1234 1234 1234 1234
    Autogenerated by FlutLab FTF Generator
  */
class HintTextCardNumber extends StatefulWidget {
  @override
  State<HintTextCardNumber> createState() => _HintTextCardNumberState();
}

class _HintTextCardNumberState extends State<HintTextCardNumber> {
  final _numbercard = TextEditingController();

  bool labelHidden = false;

  @override
  Widget build(BuildContext context) {
    final validationProvider =
        Provider.of<PaymentValidationProvider>(context, listen: true);
    final theme = Provider.of<ThemeProvider>(context);
    return Scaffold(
      backgroundColor: theme.isDarkMode
          ? Color(0xff67748E)
          : Color.fromARGB(255, 255, 255, 255),
      body: Center(
        child: Material(
          color: theme.isDarkMode ? Color(0xff67748E) : Colors.white,
          child: TextField(
            controller: _numbercard,
            decoration: InputDecoration(
                errorText: validationProvider.cardNumIsValid != null &&
                        !validationProvider.cardNumIsValid!
                    ? 'Card number must be 16 digits!'
                    : null,
                errorStyle: TextStyle(
                    color: theme.isDarkMode ? Colors.tealAccent : Colors.red),
                border: InputBorder.none,
                filled: true,
                fillColor: theme.isDarkMode ? Color(0xff67748E) : Colors.white,
                labelText: labelHidden ? null : ('Card Number'),
                labelStyle:
                    TextStyle(color: theme.isDarkMode ? white : Colors.black)),
            style: TextStyle(color: theme.isDarkMode ? white : Colors.black),
            onChanged: (String value) {
              Provider.of<PaymentValidationProvider>(context, listen: false)
                  .validateCardNum(value);
              if (value.isEmpty) {
                labelHidden = false;
              } else {
                labelHidden = true;
              }
            },
            inputFormatters: [
              //FilteringTextInputFormatter.digitsOnly,
              LengthLimitingTextInputFormatter(19),
              CreditCardFormatter(),
            ],
            // inputFormatters: [
            //   CreditCardFormatter(),
            // ],
          ),
        ),
      ),
    );
  }
}
